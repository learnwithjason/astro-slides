---
/*
 * 1. Locked state
 *    - shows a QR code and a short link
 *    - instruction: X people need to boop this corgi before we begin
 *    - show the corgi to be booped
 *    - counters: people on site, # of boops
 * 2. Unlocked state
 *    - slide content
 */
import Slide from './slide.astro';
---

<Slide slug="team-unlock">
	<h1>TODO: team unlock</h1>
	<p>Press and hold the button for a surprise.</p>
	<button id="unlock">HOLD! (<span id="count">0</span>)</button>
</Slide>

<script>
	import { partySocket, send } from '../scripts/slide-state';
	import { createMachine, createActor } from 'xstate';

	const button = document.getElementById('unlock') as HTMLButtonElement;
	const count = document.getElementById('count') as HTMLSpanElement;

	function handleButtonHold() {
		send({ type: 'team-unlock-hold' });
		console.log('button held');
	}

	function handleButtonRelease() {
		send({ type: 'team-unlock-release' });
		console.log('button released');
	}

	const teamUnlockMachine = createMachine(
		{
			id: 'team-unlock',
			initial: 'inactive',
			context: {} as {},
			states: {
				inactive: {
					entry: 'deactivateSlide',
					on: {
						activate: 'active',
					},
				},
				active: {
					entry: 'activateSlide',
					on: {
						deactivate: 'inactive',
					},
				},
			},
		},
		{
			actions: {
				activateSlide: () => {
					button.addEventListener('mousedown', handleButtonHold);
					button.addEventListener('mouseup', handleButtonRelease);
				},
				deactivateSlide: () => {
					button.removeEventListener('mousedown', handleButtonHold);
					button.removeEventListener('mouseup', handleButtonRelease);
				},
			},
		},
	);

	const teamUnlockActor = createActor(teamUnlockMachine).start();

	partySocket.addEventListener('message', (event) => {
		const message = JSON.parse(event.data);

		if (message.type === 'enter' && message.value === 'team-unlock') {
			teamUnlockActor.send({ type: 'activate' });
			return;
		}

		if (message.type === 'exit' && message.value === 'team-unlock') {
			teamUnlockActor.send({ type: 'deactivate' });
			return;
		}

		if (message.type === 'team-unlock-update') {
			const currentCount = parseInt(message.value);
			count.innerText = `${currentCount}`;
		}
	});
</script>
